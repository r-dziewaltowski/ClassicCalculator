name: Publish to NuGet

on:
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x' # Change to your target version

      - name: Configure Git user
        run: |
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}"

      - name: Update .csproj Version
        run: |
          VERSION=${{ github.event.release.tag_name }}
          VERSION=${VERSION#v}  # Remove 'v' prefix if present
          git checkout main
          echo "Setting .csproj version to: $VERSION"        
          # Update <Version> inside the .csproj file
          sed -i 's|<Version>.*</Version>|<Version>'"$VERSION"'</Version>|' ./src/ClassicCalculator/ClassicCalculator.csproj
          git add src/ClassicCalculator/ClassicCalculator.csproj

      - name: Commit Version Update
        run: |
          git commit -m "Update version to $VERSION"
          git push

      - name: Restore dependencies
        run: dotnet restore ./src/ClassicCalculator/

      - name: Build the project
        run: dotnet build ./src/ClassicCalculator/ --configuration Release --no-restore

      - name: Pack the project
        run: dotnet pack ./src/ClassicCalculator/ --configuration Release --no-build --output nupkg

      - name: Publish .nupkg to NuGet
        run: dotnet nuget push nupkg/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

      - name: Publish .snupkg to NuGet
        run: dotnet nuget push nupkg/*.snupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
